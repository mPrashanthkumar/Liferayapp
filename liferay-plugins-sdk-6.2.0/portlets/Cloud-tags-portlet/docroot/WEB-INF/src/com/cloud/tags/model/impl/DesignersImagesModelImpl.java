/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.model.impl;

import com.cloud.tags.model.DesignersImages;
import com.cloud.tags.model.DesignersImagesModel;
import com.cloud.tags.model.DesignersImagesSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DesignersImages service. Represents a row in the &quot;designers_images&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.cloud.tags.model.DesignersImagesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DesignersImagesImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see DesignersImagesImpl
 * @see com.cloud.tags.model.DesignersImages
 * @see com.cloud.tags.model.DesignersImagesModel
 * @generated
 */
@JSON(strict = true)
public class DesignersImagesModelImpl extends BaseModelImpl<DesignersImages>
	implements DesignersImagesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a designers images model instance should use the {@link com.cloud.tags.model.DesignersImages} interface instead.
	 */
	public static final String TABLE_NAME = "designers_images";
	public static final Object[][] TABLE_COLUMNS = {
			{ "designImageId", Types.BIGINT },
			{ "designId", Types.BIGINT },
			{ "entity_image1", Types.VARCHAR },
			{ "entity_image2", Types.VARCHAR },
			{ "entity_image3", Types.VARCHAR },
			{ "entity_image4", Types.VARCHAR },
			{ "entity_image5", Types.VARCHAR },
			{ "entity_image6", Types.VARCHAR },
			{ "entity_image7", Types.VARCHAR },
			{ "entity_image8", Types.VARCHAR },
			{ "entity_image9", Types.VARCHAR },
			{ "entity_image10", Types.VARCHAR },
			{ "large_image_url", Types.VARCHAR },
			{ "small_image_url", Types.VARCHAR },
			{ "profile_image_url", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table designers_images (designImageId LONG not null primary key,designId LONG,entity_image1 TEXT null,entity_image2 TEXT null,entity_image3 TEXT null,entity_image4 TEXT null,entity_image5 TEXT null,entity_image6 TEXT null,entity_image7 TEXT null,entity_image8 TEXT null,entity_image9 TEXT null,entity_image10 TEXT null,large_image_url TEXT null,small_image_url TEXT null,profile_image_url TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table designers_images";
	public static final String ORDER_BY_JPQL = " ORDER BY designersImages.designImageId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY designers_images.designImageId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.cloud.tags.model.DesignersImages"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.cloud.tags.model.DesignersImages"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.cloud.tags.model.DesignersImages"),
			true);
	public static long DESIGNID_COLUMN_BITMASK = 1L;
	public static long DESIGNIMAGEID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DesignersImages toModel(DesignersImagesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DesignersImages model = new DesignersImagesImpl();

		model.setDesignImageId(soapModel.getDesignImageId());
		model.setDesignId(soapModel.getDesignId());
		model.setEntity_image1(soapModel.getEntity_image1());
		model.setEntity_image2(soapModel.getEntity_image2());
		model.setEntity_image3(soapModel.getEntity_image3());
		model.setEntity_image4(soapModel.getEntity_image4());
		model.setEntity_image5(soapModel.getEntity_image5());
		model.setEntity_image6(soapModel.getEntity_image6());
		model.setEntity_image7(soapModel.getEntity_image7());
		model.setEntity_image8(soapModel.getEntity_image8());
		model.setEntity_image9(soapModel.getEntity_image9());
		model.setEntity_image10(soapModel.getEntity_image10());
		model.setLarge_image_url(soapModel.getLarge_image_url());
		model.setSmall_image_url(soapModel.getSmall_image_url());
		model.setProfile_image_url(soapModel.getProfile_image_url());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DesignersImages> toModels(
		DesignersImagesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DesignersImages> models = new ArrayList<DesignersImages>(soapModels.length);

		for (DesignersImagesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.cloud.tags.model.DesignersImages"));

	public DesignersImagesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _designImageId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDesignImageId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _designImageId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DesignersImages.class;
	}

	@Override
	public String getModelClassName() {
		return DesignersImages.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("designImageId", getDesignImageId());
		attributes.put("designId", getDesignId());
		attributes.put("entity_image1", getEntity_image1());
		attributes.put("entity_image2", getEntity_image2());
		attributes.put("entity_image3", getEntity_image3());
		attributes.put("entity_image4", getEntity_image4());
		attributes.put("entity_image5", getEntity_image5());
		attributes.put("entity_image6", getEntity_image6());
		attributes.put("entity_image7", getEntity_image7());
		attributes.put("entity_image8", getEntity_image8());
		attributes.put("entity_image9", getEntity_image9());
		attributes.put("entity_image10", getEntity_image10());
		attributes.put("large_image_url", getLarge_image_url());
		attributes.put("small_image_url", getSmall_image_url());
		attributes.put("profile_image_url", getProfile_image_url());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long designImageId = (Long)attributes.get("designImageId");

		if (designImageId != null) {
			setDesignImageId(designImageId);
		}

		Long designId = (Long)attributes.get("designId");

		if (designId != null) {
			setDesignId(designId);
		}

		String entity_image1 = (String)attributes.get("entity_image1");

		if (entity_image1 != null) {
			setEntity_image1(entity_image1);
		}

		String entity_image2 = (String)attributes.get("entity_image2");

		if (entity_image2 != null) {
			setEntity_image2(entity_image2);
		}

		String entity_image3 = (String)attributes.get("entity_image3");

		if (entity_image3 != null) {
			setEntity_image3(entity_image3);
		}

		String entity_image4 = (String)attributes.get("entity_image4");

		if (entity_image4 != null) {
			setEntity_image4(entity_image4);
		}

		String entity_image5 = (String)attributes.get("entity_image5");

		if (entity_image5 != null) {
			setEntity_image5(entity_image5);
		}

		String entity_image6 = (String)attributes.get("entity_image6");

		if (entity_image6 != null) {
			setEntity_image6(entity_image6);
		}

		String entity_image7 = (String)attributes.get("entity_image7");

		if (entity_image7 != null) {
			setEntity_image7(entity_image7);
		}

		String entity_image8 = (String)attributes.get("entity_image8");

		if (entity_image8 != null) {
			setEntity_image8(entity_image8);
		}

		String entity_image9 = (String)attributes.get("entity_image9");

		if (entity_image9 != null) {
			setEntity_image9(entity_image9);
		}

		String entity_image10 = (String)attributes.get("entity_image10");

		if (entity_image10 != null) {
			setEntity_image10(entity_image10);
		}

		String large_image_url = (String)attributes.get("large_image_url");

		if (large_image_url != null) {
			setLarge_image_url(large_image_url);
		}

		String small_image_url = (String)attributes.get("small_image_url");

		if (small_image_url != null) {
			setSmall_image_url(small_image_url);
		}

		String profile_image_url = (String)attributes.get("profile_image_url");

		if (profile_image_url != null) {
			setProfile_image_url(profile_image_url);
		}
	}

	@JSON
	@Override
	public long getDesignImageId() {
		return _designImageId;
	}

	@Override
	public void setDesignImageId(long designImageId) {
		_designImageId = designImageId;
	}

	@JSON
	@Override
	public long getDesignId() {
		return _designId;
	}

	@Override
	public void setDesignId(long designId) {
		_columnBitmask |= DESIGNID_COLUMN_BITMASK;

		if (!_setOriginalDesignId) {
			_setOriginalDesignId = true;

			_originalDesignId = _designId;
		}

		_designId = designId;
	}

	public long getOriginalDesignId() {
		return _originalDesignId;
	}

	@JSON
	@Override
	public String getEntity_image1() {
		if (_entity_image1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image1;
		}
	}

	@Override
	public void setEntity_image1(String entity_image1) {
		_entity_image1 = entity_image1;
	}

	@JSON
	@Override
	public String getEntity_image2() {
		if (_entity_image2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image2;
		}
	}

	@Override
	public void setEntity_image2(String entity_image2) {
		_entity_image2 = entity_image2;
	}

	@JSON
	@Override
	public String getEntity_image3() {
		if (_entity_image3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image3;
		}
	}

	@Override
	public void setEntity_image3(String entity_image3) {
		_entity_image3 = entity_image3;
	}

	@JSON
	@Override
	public String getEntity_image4() {
		if (_entity_image4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image4;
		}
	}

	@Override
	public void setEntity_image4(String entity_image4) {
		_entity_image4 = entity_image4;
	}

	@JSON
	@Override
	public String getEntity_image5() {
		if (_entity_image5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image5;
		}
	}

	@Override
	public void setEntity_image5(String entity_image5) {
		_entity_image5 = entity_image5;
	}

	@JSON
	@Override
	public String getEntity_image6() {
		if (_entity_image6 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image6;
		}
	}

	@Override
	public void setEntity_image6(String entity_image6) {
		_entity_image6 = entity_image6;
	}

	@JSON
	@Override
	public String getEntity_image7() {
		if (_entity_image7 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image7;
		}
	}

	@Override
	public void setEntity_image7(String entity_image7) {
		_entity_image7 = entity_image7;
	}

	@JSON
	@Override
	public String getEntity_image8() {
		if (_entity_image8 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image8;
		}
	}

	@Override
	public void setEntity_image8(String entity_image8) {
		_entity_image8 = entity_image8;
	}

	@JSON
	@Override
	public String getEntity_image9() {
		if (_entity_image9 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image9;
		}
	}

	@Override
	public void setEntity_image9(String entity_image9) {
		_entity_image9 = entity_image9;
	}

	@JSON
	@Override
	public String getEntity_image10() {
		if (_entity_image10 == null) {
			return StringPool.BLANK;
		}
		else {
			return _entity_image10;
		}
	}

	@Override
	public void setEntity_image10(String entity_image10) {
		_entity_image10 = entity_image10;
	}

	@JSON
	@Override
	public String getLarge_image_url() {
		if (_large_image_url == null) {
			return StringPool.BLANK;
		}
		else {
			return _large_image_url;
		}
	}

	@Override
	public void setLarge_image_url(String large_image_url) {
		_large_image_url = large_image_url;
	}

	@JSON
	@Override
	public String getSmall_image_url() {
		if (_small_image_url == null) {
			return StringPool.BLANK;
		}
		else {
			return _small_image_url;
		}
	}

	@Override
	public void setSmall_image_url(String small_image_url) {
		_small_image_url = small_image_url;
	}

	@JSON
	@Override
	public String getProfile_image_url() {
		if (_profile_image_url == null) {
			return StringPool.BLANK;
		}
		else {
			return _profile_image_url;
		}
	}

	@Override
	public void setProfile_image_url(String profile_image_url) {
		_profile_image_url = profile_image_url;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			DesignersImages.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DesignersImages toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DesignersImages)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DesignersImagesImpl designersImagesImpl = new DesignersImagesImpl();

		designersImagesImpl.setDesignImageId(getDesignImageId());
		designersImagesImpl.setDesignId(getDesignId());
		designersImagesImpl.setEntity_image1(getEntity_image1());
		designersImagesImpl.setEntity_image2(getEntity_image2());
		designersImagesImpl.setEntity_image3(getEntity_image3());
		designersImagesImpl.setEntity_image4(getEntity_image4());
		designersImagesImpl.setEntity_image5(getEntity_image5());
		designersImagesImpl.setEntity_image6(getEntity_image6());
		designersImagesImpl.setEntity_image7(getEntity_image7());
		designersImagesImpl.setEntity_image8(getEntity_image8());
		designersImagesImpl.setEntity_image9(getEntity_image9());
		designersImagesImpl.setEntity_image10(getEntity_image10());
		designersImagesImpl.setLarge_image_url(getLarge_image_url());
		designersImagesImpl.setSmall_image_url(getSmall_image_url());
		designersImagesImpl.setProfile_image_url(getProfile_image_url());

		designersImagesImpl.resetOriginalValues();

		return designersImagesImpl;
	}

	@Override
	public int compareTo(DesignersImages designersImages) {
		long primaryKey = designersImages.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DesignersImages)) {
			return false;
		}

		DesignersImages designersImages = (DesignersImages)obj;

		long primaryKey = designersImages.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DesignersImagesModelImpl designersImagesModelImpl = this;

		designersImagesModelImpl._originalDesignId = designersImagesModelImpl._designId;

		designersImagesModelImpl._setOriginalDesignId = false;

		designersImagesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DesignersImages> toCacheModel() {
		DesignersImagesCacheModel designersImagesCacheModel = new DesignersImagesCacheModel();

		designersImagesCacheModel.designImageId = getDesignImageId();

		designersImagesCacheModel.designId = getDesignId();

		designersImagesCacheModel.entity_image1 = getEntity_image1();

		String entity_image1 = designersImagesCacheModel.entity_image1;

		if ((entity_image1 != null) && (entity_image1.length() == 0)) {
			designersImagesCacheModel.entity_image1 = null;
		}

		designersImagesCacheModel.entity_image2 = getEntity_image2();

		String entity_image2 = designersImagesCacheModel.entity_image2;

		if ((entity_image2 != null) && (entity_image2.length() == 0)) {
			designersImagesCacheModel.entity_image2 = null;
		}

		designersImagesCacheModel.entity_image3 = getEntity_image3();

		String entity_image3 = designersImagesCacheModel.entity_image3;

		if ((entity_image3 != null) && (entity_image3.length() == 0)) {
			designersImagesCacheModel.entity_image3 = null;
		}

		designersImagesCacheModel.entity_image4 = getEntity_image4();

		String entity_image4 = designersImagesCacheModel.entity_image4;

		if ((entity_image4 != null) && (entity_image4.length() == 0)) {
			designersImagesCacheModel.entity_image4 = null;
		}

		designersImagesCacheModel.entity_image5 = getEntity_image5();

		String entity_image5 = designersImagesCacheModel.entity_image5;

		if ((entity_image5 != null) && (entity_image5.length() == 0)) {
			designersImagesCacheModel.entity_image5 = null;
		}

		designersImagesCacheModel.entity_image6 = getEntity_image6();

		String entity_image6 = designersImagesCacheModel.entity_image6;

		if ((entity_image6 != null) && (entity_image6.length() == 0)) {
			designersImagesCacheModel.entity_image6 = null;
		}

		designersImagesCacheModel.entity_image7 = getEntity_image7();

		String entity_image7 = designersImagesCacheModel.entity_image7;

		if ((entity_image7 != null) && (entity_image7.length() == 0)) {
			designersImagesCacheModel.entity_image7 = null;
		}

		designersImagesCacheModel.entity_image8 = getEntity_image8();

		String entity_image8 = designersImagesCacheModel.entity_image8;

		if ((entity_image8 != null) && (entity_image8.length() == 0)) {
			designersImagesCacheModel.entity_image8 = null;
		}

		designersImagesCacheModel.entity_image9 = getEntity_image9();

		String entity_image9 = designersImagesCacheModel.entity_image9;

		if ((entity_image9 != null) && (entity_image9.length() == 0)) {
			designersImagesCacheModel.entity_image9 = null;
		}

		designersImagesCacheModel.entity_image10 = getEntity_image10();

		String entity_image10 = designersImagesCacheModel.entity_image10;

		if ((entity_image10 != null) && (entity_image10.length() == 0)) {
			designersImagesCacheModel.entity_image10 = null;
		}

		designersImagesCacheModel.large_image_url = getLarge_image_url();

		String large_image_url = designersImagesCacheModel.large_image_url;

		if ((large_image_url != null) && (large_image_url.length() == 0)) {
			designersImagesCacheModel.large_image_url = null;
		}

		designersImagesCacheModel.small_image_url = getSmall_image_url();

		String small_image_url = designersImagesCacheModel.small_image_url;

		if ((small_image_url != null) && (small_image_url.length() == 0)) {
			designersImagesCacheModel.small_image_url = null;
		}

		designersImagesCacheModel.profile_image_url = getProfile_image_url();

		String profile_image_url = designersImagesCacheModel.profile_image_url;

		if ((profile_image_url != null) && (profile_image_url.length() == 0)) {
			designersImagesCacheModel.profile_image_url = null;
		}

		return designersImagesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{designImageId=");
		sb.append(getDesignImageId());
		sb.append(", designId=");
		sb.append(getDesignId());
		sb.append(", entity_image1=");
		sb.append(getEntity_image1());
		sb.append(", entity_image2=");
		sb.append(getEntity_image2());
		sb.append(", entity_image3=");
		sb.append(getEntity_image3());
		sb.append(", entity_image4=");
		sb.append(getEntity_image4());
		sb.append(", entity_image5=");
		sb.append(getEntity_image5());
		sb.append(", entity_image6=");
		sb.append(getEntity_image6());
		sb.append(", entity_image7=");
		sb.append(getEntity_image7());
		sb.append(", entity_image8=");
		sb.append(getEntity_image8());
		sb.append(", entity_image9=");
		sb.append(getEntity_image9());
		sb.append(", entity_image10=");
		sb.append(getEntity_image10());
		sb.append(", large_image_url=");
		sb.append(getLarge_image_url());
		sb.append(", small_image_url=");
		sb.append(getSmall_image_url());
		sb.append(", profile_image_url=");
		sb.append(getProfile_image_url());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.cloud.tags.model.DesignersImages");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>designImageId</column-name><column-value><![CDATA[");
		sb.append(getDesignImageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>designId</column-name><column-value><![CDATA[");
		sb.append(getDesignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image1</column-name><column-value><![CDATA[");
		sb.append(getEntity_image1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image2</column-name><column-value><![CDATA[");
		sb.append(getEntity_image2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image3</column-name><column-value><![CDATA[");
		sb.append(getEntity_image3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image4</column-name><column-value><![CDATA[");
		sb.append(getEntity_image4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image5</column-name><column-value><![CDATA[");
		sb.append(getEntity_image5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image6</column-name><column-value><![CDATA[");
		sb.append(getEntity_image6());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image7</column-name><column-value><![CDATA[");
		sb.append(getEntity_image7());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image8</column-name><column-value><![CDATA[");
		sb.append(getEntity_image8());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image9</column-name><column-value><![CDATA[");
		sb.append(getEntity_image9());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entity_image10</column-name><column-value><![CDATA[");
		sb.append(getEntity_image10());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>large_image_url</column-name><column-value><![CDATA[");
		sb.append(getLarge_image_url());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>small_image_url</column-name><column-value><![CDATA[");
		sb.append(getSmall_image_url());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profile_image_url</column-name><column-value><![CDATA[");
		sb.append(getProfile_image_url());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DesignersImages.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DesignersImages.class
		};
	private long _designImageId;
	private long _designId;
	private long _originalDesignId;
	private boolean _setOriginalDesignId;
	private String _entity_image1;
	private String _entity_image2;
	private String _entity_image3;
	private String _entity_image4;
	private String _entity_image5;
	private String _entity_image6;
	private String _entity_image7;
	private String _entity_image8;
	private String _entity_image9;
	private String _entity_image10;
	private String _large_image_url;
	private String _small_image_url;
	private String _profile_image_url;
	private long _columnBitmask;
	private DesignersImages _escapedModel;
}