/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Designers service. Represents a row in the &quot;designers&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.cloud.tags.model.impl.DesignersModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.cloud.tags.model.impl.DesignersImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see Designers
 * @see com.cloud.tags.model.impl.DesignersImpl
 * @see com.cloud.tags.model.impl.DesignersModelImpl
 * @generated
 */
public interface DesignersModel extends BaseModel<Designers> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a designers model instance should use the {@link Designers} interface instead.
	 */

	/**
	 * Returns the primary key of this designers.
	 *
	 * @return the primary key of this designers
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this designers.
	 *
	 * @param primaryKey the primary key of this designers
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the design ID of this designers.
	 *
	 * @return the design ID of this designers
	 */
	public long getDesignId();

	/**
	 * Sets the design ID of this designers.
	 *
	 * @param designId the design ID of this designers
	 */
	public void setDesignId(long designId);

	/**
	 * Returns the user ID of this designers.
	 *
	 * @return the user ID of this designers
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this designers.
	 *
	 * @param userId the user ID of this designers
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this designers.
	 *
	 * @return the user uuid of this designers
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this designers.
	 *
	 * @param userUuid the user uuid of this designers
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the company ID of this designers.
	 *
	 * @return the company ID of this designers
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this designers.
	 *
	 * @param companyId the company ID of this designers
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this designers.
	 *
	 * @return the group ID of this designers
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this designers.
	 *
	 * @param groupId the group ID of this designers
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the create date of this designers.
	 *
	 * @return the create date of this designers
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this designers.
	 *
	 * @param createDate the create date of this designers
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this designers.
	 *
	 * @return the modified date of this designers
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this designers.
	 *
	 * @param modifiedDate the modified date of this designers
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this designers.
	 *
	 * @return the name of this designers
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this designers.
	 *
	 * @param name the name of this designers
	 */
	public void setName(String name);

	/**
	 * Returns the product title of this designers.
	 *
	 * @return the product title of this designers
	 */
	@AutoEscape
	public String getProductTitle();

	/**
	 * Sets the product title of this designers.
	 *
	 * @param productTitle the product title of this designers
	 */
	public void setProductTitle(String productTitle);

	/**
	 * Returns the description of this designers.
	 *
	 * @return the description of this designers
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this designers.
	 *
	 * @param description the description of this designers
	 */
	public void setDescription(String description);

	/**
	 * Returns the short description of this designers.
	 *
	 * @return the short description of this designers
	 */
	@AutoEscape
	public String getShortDescription();

	/**
	 * Sets the short description of this designers.
	 *
	 * @param shortDescription the short description of this designers
	 */
	public void setShortDescription(String shortDescription);

	/**
	 * Returns the price of this designers.
	 *
	 * @return the price of this designers
	 */
	@AutoEscape
	public String getPrice();

	/**
	 * Sets the price of this designers.
	 *
	 * @param price the price of this designers
	 */
	public void setPrice(String price);

	/**
	 * Returns the public_url of this designers.
	 *
	 * @return the public_url of this designers
	 */
	@AutoEscape
	public String getPublic_url();

	/**
	 * Sets the public_url of this designers.
	 *
	 * @param public_url the public_url of this designers
	 */
	public void setPublic_url(String public_url);

	/**
	 * Returns the short_url of this designers.
	 *
	 * @return the short_url of this designers
	 */
	@AutoEscape
	public String getShort_url();

	/**
	 * Sets the short_url of this designers.
	 *
	 * @param short_url the short_url of this designers
	 */
	public void setShort_url(String short_url);

	/**
	 * Returns the slug of this designers.
	 *
	 * @return the slug of this designers
	 */
	@AutoEscape
	public String getSlug();

	/**
	 * Sets the slug of this designers.
	 *
	 * @param slug the slug of this designers
	 */
	public void setSlug(String slug);

	/**
	 * Returns the sizes of this designers.
	 *
	 * @return the sizes of this designers
	 */
	@AutoEscape
	public String getSizes();

	/**
	 * Sets the sizes of this designers.
	 *
	 * @param sizes the sizes of this designers
	 */
	public void setSizes(String sizes);

	/**
	 * Returns the colors of this designers.
	 *
	 * @return the colors of this designers
	 */
	@AutoEscape
	public String getColors();

	/**
	 * Sets the colors of this designers.
	 *
	 * @param colors the colors of this designers
	 */
	public void setColors(String colors);

	/**
	 * Returns the brand of this designers.
	 *
	 * @return the brand of this designers
	 */
	@AutoEscape
	public String getBrand();

	/**
	 * Sets the brand of this designers.
	 *
	 * @param brand the brand of this designers
	 */
	public void setBrand(String brand);

	/**
	 * Returns the saleprice of this designers.
	 *
	 * @return the saleprice of this designers
	 */
	@AutoEscape
	public String getSaleprice();

	/**
	 * Sets the saleprice of this designers.
	 *
	 * @param saleprice the saleprice of this designers
	 */
	public void setSaleprice(String saleprice);

	/**
	 * Returns the retailprice of this designers.
	 *
	 * @return the retailprice of this designers
	 */
	@AutoEscape
	public String getRetailprice();

	/**
	 * Sets the retailprice of this designers.
	 *
	 * @param retailprice the retailprice of this designers
	 */
	public void setRetailprice(String retailprice);

	/**
	 * Returns the instock of this designers.
	 *
	 * @return the instock of this designers
	 */
	@AutoEscape
	public String getInstock();

	/**
	 * Sets the instock of this designers.
	 *
	 * @param instock the instock of this designers
	 */
	public void setInstock(String instock);

	/**
	 * Returns the parentid of this designers.
	 *
	 * @return the parentid of this designers
	 */
	@AutoEscape
	public String getParentid();

	/**
	 * Sets the parentid of this designers.
	 *
	 * @param parentid the parentid of this designers
	 */
	public void setParentid(String parentid);

	/**
	 * Returns the category of this designers.
	 *
	 * @return the category of this designers
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this designers.
	 *
	 * @param category the category of this designers
	 */
	public void setCategory(String category);

	/**
	 * Returns the productcode of this designers.
	 *
	 * @return the productcode of this designers
	 */
	@AutoEscape
	public String getProductcode();

	/**
	 * Sets the productcode of this designers.
	 *
	 * @param productcode the productcode of this designers
	 */
	public void setProductcode(String productcode);

	/**
	 * Returns the barcode of this designers.
	 *
	 * @return the barcode of this designers
	 */
	@AutoEscape
	public String getBarcode();

	/**
	 * Sets the barcode of this designers.
	 *
	 * @param barcode the barcode of this designers
	 */
	public void setBarcode(String barcode);

	/**
	 * Returns the match with of this designers.
	 *
	 * @return the match with of this designers
	 */
	@AutoEscape
	public String getMatchWith();

	/**
	 * Sets the match with of this designers.
	 *
	 * @param matchWith the match with of this designers
	 */
	public void setMatchWith(String matchWith);

	/**
	 * Returns the timer date of this designers.
	 *
	 * @return the timer date of this designers
	 */
	@AutoEscape
	public String getTimerDate();

	/**
	 * Sets the timer date of this designers.
	 *
	 * @param timerDate the timer date of this designers
	 */
	public void setTimerDate(String timerDate);

	/**
	 * Returns the tabcurrent of this designers.
	 *
	 * @return the tabcurrent of this designers
	 */
	public boolean getTabcurrent();

	/**
	 * Returns <code>true</code> if this designers is tabcurrent.
	 *
	 * @return <code>true</code> if this designers is tabcurrent; <code>false</code> otherwise
	 */
	public boolean isTabcurrent();

	/**
	 * Sets whether this designers is tabcurrent.
	 *
	 * @param tabcurrent the tabcurrent of this designers
	 */
	public void setTabcurrent(boolean tabcurrent);

	/**
	 * Returns the liked of this designers.
	 *
	 * @return the liked of this designers
	 */
	public long getLiked();

	/**
	 * Sets the liked of this designers.
	 *
	 * @param liked the liked of this designers
	 */
	public void setLiked(long liked);

	/**
	 * Returns the ctapp_shorturl of this designers.
	 *
	 * @return the ctapp_shorturl of this designers
	 */
	public boolean getCtapp_shorturl();

	/**
	 * Returns <code>true</code> if this designers is ctapp_shorturl.
	 *
	 * @return <code>true</code> if this designers is ctapp_shorturl; <code>false</code> otherwise
	 */
	public boolean isCtapp_shorturl();

	/**
	 * Sets whether this designers is ctapp_shorturl.
	 *
	 * @param ctapp_shorturl the ctapp_shorturl of this designers
	 */
	public void setCtapp_shorturl(boolean ctapp_shorturl);

	/**
	 * Returns the ctapp_shorturl_success of this designers.
	 *
	 * @return the ctapp_shorturl_success of this designers
	 */
	public boolean getCtapp_shorturl_success();

	/**
	 * Returns <code>true</code> if this designers is ctapp_shorturl_success.
	 *
	 * @return <code>true</code> if this designers is ctapp_shorturl_success; <code>false</code> otherwise
	 */
	public boolean isCtapp_shorturl_success();

	/**
	 * Sets whether this designers is ctapp_shorturl_success.
	 *
	 * @param ctapp_shorturl_success the ctapp_shorturl_success of this designers
	 */
	public void setCtapp_shorturl_success(boolean ctapp_shorturl_success);

	/**
	 * Returns the sayduck of this designers.
	 *
	 * @return the sayduck of this designers
	 */
	public boolean getSayduck();

	/**
	 * Returns <code>true</code> if this designers is sayduck.
	 *
	 * @return <code>true</code> if this designers is sayduck; <code>false</code> otherwise
	 */
	public boolean isSayduck();

	/**
	 * Sets whether this designers is sayduck.
	 *
	 * @param sayduck the sayduck of this designers
	 */
	public void setSayduck(boolean sayduck);

	/**
	 * Returns the left_description of this designers.
	 *
	 * @return the left_description of this designers
	 */
	@AutoEscape
	public String getLeft_description();

	/**
	 * Sets the left_description of this designers.
	 *
	 * @param left_description the left_description of this designers
	 */
	public void setLeft_description(String left_description);

	/**
	 * Returns the right_description of this designers.
	 *
	 * @return the right_description of this designers
	 */
	@AutoEscape
	public String getRight_description();

	/**
	 * Sets the right_description of this designers.
	 *
	 * @param right_description the right_description of this designers
	 */
	public void setRight_description(String right_description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Designers designers);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Designers> toCacheModel();

	@Override
	public Designers toEscapedModel();

	@Override
	public Designers toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}