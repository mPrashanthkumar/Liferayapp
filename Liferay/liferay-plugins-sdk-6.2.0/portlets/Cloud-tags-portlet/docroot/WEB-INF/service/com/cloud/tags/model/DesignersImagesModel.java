/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DesignersImages service. Represents a row in the &quot;designers_images&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.cloud.tags.model.impl.DesignersImagesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.cloud.tags.model.impl.DesignersImagesImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see DesignersImages
 * @see com.cloud.tags.model.impl.DesignersImagesImpl
 * @see com.cloud.tags.model.impl.DesignersImagesModelImpl
 * @generated
 */
public interface DesignersImagesModel extends BaseModel<DesignersImages> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a designers images model instance should use the {@link DesignersImages} interface instead.
	 */

	/**
	 * Returns the primary key of this designers images.
	 *
	 * @return the primary key of this designers images
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this designers images.
	 *
	 * @param primaryKey the primary key of this designers images
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the design image ID of this designers images.
	 *
	 * @return the design image ID of this designers images
	 */
	public long getDesignImageId();

	/**
	 * Sets the design image ID of this designers images.
	 *
	 * @param designImageId the design image ID of this designers images
	 */
	public void setDesignImageId(long designImageId);

	/**
	 * Returns the design ID of this designers images.
	 *
	 * @return the design ID of this designers images
	 */
	public long getDesignId();

	/**
	 * Sets the design ID of this designers images.
	 *
	 * @param designId the design ID of this designers images
	 */
	public void setDesignId(long designId);

	/**
	 * Returns the entity_image1 of this designers images.
	 *
	 * @return the entity_image1 of this designers images
	 */
	@AutoEscape
	public String getEntity_image1();

	/**
	 * Sets the entity_image1 of this designers images.
	 *
	 * @param entity_image1 the entity_image1 of this designers images
	 */
	public void setEntity_image1(String entity_image1);

	/**
	 * Returns the entity_image2 of this designers images.
	 *
	 * @return the entity_image2 of this designers images
	 */
	@AutoEscape
	public String getEntity_image2();

	/**
	 * Sets the entity_image2 of this designers images.
	 *
	 * @param entity_image2 the entity_image2 of this designers images
	 */
	public void setEntity_image2(String entity_image2);

	/**
	 * Returns the entity_image3 of this designers images.
	 *
	 * @return the entity_image3 of this designers images
	 */
	@AutoEscape
	public String getEntity_image3();

	/**
	 * Sets the entity_image3 of this designers images.
	 *
	 * @param entity_image3 the entity_image3 of this designers images
	 */
	public void setEntity_image3(String entity_image3);

	/**
	 * Returns the entity_image4 of this designers images.
	 *
	 * @return the entity_image4 of this designers images
	 */
	@AutoEscape
	public String getEntity_image4();

	/**
	 * Sets the entity_image4 of this designers images.
	 *
	 * @param entity_image4 the entity_image4 of this designers images
	 */
	public void setEntity_image4(String entity_image4);

	/**
	 * Returns the entity_image5 of this designers images.
	 *
	 * @return the entity_image5 of this designers images
	 */
	@AutoEscape
	public String getEntity_image5();

	/**
	 * Sets the entity_image5 of this designers images.
	 *
	 * @param entity_image5 the entity_image5 of this designers images
	 */
	public void setEntity_image5(String entity_image5);

	/**
	 * Returns the entity_image6 of this designers images.
	 *
	 * @return the entity_image6 of this designers images
	 */
	@AutoEscape
	public String getEntity_image6();

	/**
	 * Sets the entity_image6 of this designers images.
	 *
	 * @param entity_image6 the entity_image6 of this designers images
	 */
	public void setEntity_image6(String entity_image6);

	/**
	 * Returns the entity_image7 of this designers images.
	 *
	 * @return the entity_image7 of this designers images
	 */
	@AutoEscape
	public String getEntity_image7();

	/**
	 * Sets the entity_image7 of this designers images.
	 *
	 * @param entity_image7 the entity_image7 of this designers images
	 */
	public void setEntity_image7(String entity_image7);

	/**
	 * Returns the entity_image8 of this designers images.
	 *
	 * @return the entity_image8 of this designers images
	 */
	@AutoEscape
	public String getEntity_image8();

	/**
	 * Sets the entity_image8 of this designers images.
	 *
	 * @param entity_image8 the entity_image8 of this designers images
	 */
	public void setEntity_image8(String entity_image8);

	/**
	 * Returns the entity_image9 of this designers images.
	 *
	 * @return the entity_image9 of this designers images
	 */
	@AutoEscape
	public String getEntity_image9();

	/**
	 * Sets the entity_image9 of this designers images.
	 *
	 * @param entity_image9 the entity_image9 of this designers images
	 */
	public void setEntity_image9(String entity_image9);

	/**
	 * Returns the entity_image10 of this designers images.
	 *
	 * @return the entity_image10 of this designers images
	 */
	@AutoEscape
	public String getEntity_image10();

	/**
	 * Sets the entity_image10 of this designers images.
	 *
	 * @param entity_image10 the entity_image10 of this designers images
	 */
	public void setEntity_image10(String entity_image10);

	/**
	 * Returns the large_image_url of this designers images.
	 *
	 * @return the large_image_url of this designers images
	 */
	@AutoEscape
	public String getLarge_image_url();

	/**
	 * Sets the large_image_url of this designers images.
	 *
	 * @param large_image_url the large_image_url of this designers images
	 */
	public void setLarge_image_url(String large_image_url);

	/**
	 * Returns the small_image_url of this designers images.
	 *
	 * @return the small_image_url of this designers images
	 */
	@AutoEscape
	public String getSmall_image_url();

	/**
	 * Sets the small_image_url of this designers images.
	 *
	 * @param small_image_url the small_image_url of this designers images
	 */
	public void setSmall_image_url(String small_image_url);

	/**
	 * Returns the profile_image_url of this designers images.
	 *
	 * @return the profile_image_url of this designers images
	 */
	@AutoEscape
	public String getProfile_image_url();

	/**
	 * Sets the profile_image_url of this designers images.
	 *
	 * @param profile_image_url the profile_image_url of this designers images
	 */
	public void setProfile_image_url(String profile_image_url);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DesignersImages designersImages);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DesignersImages> toCacheModel();

	@Override
	public DesignersImages toEscapedModel();

	@Override
	public DesignersImages toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}