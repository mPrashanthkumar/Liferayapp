/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Recommendations service. Represents a row in the &quot;recommendations&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.cloud.tags.model.impl.RecommendationsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.cloud.tags.model.impl.RecommendationsImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see Recommendations
 * @see com.cloud.tags.model.impl.RecommendationsImpl
 * @see com.cloud.tags.model.impl.RecommendationsModelImpl
 * @generated
 */
public interface RecommendationsModel extends BaseModel<Recommendations> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a recommendations model instance should use the {@link Recommendations} interface instead.
	 */

	/**
	 * Returns the primary key of this recommendations.
	 *
	 * @return the primary key of this recommendations
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this recommendations.
	 *
	 * @param primaryKey the primary key of this recommendations
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the rec ID of this recommendations.
	 *
	 * @return the rec ID of this recommendations
	 */
	public long getRecId();

	/**
	 * Sets the rec ID of this recommendations.
	 *
	 * @param recId the rec ID of this recommendations
	 */
	public void setRecId(long recId);

	/**
	 * Returns the designer1 of this recommendations.
	 *
	 * @return the designer1 of this recommendations
	 */
	@AutoEscape
	public String getDesigner1();

	/**
	 * Sets the designer1 of this recommendations.
	 *
	 * @param designer1 the designer1 of this recommendations
	 */
	public void setDesigner1(String designer1);

	/**
	 * Returns the designer2 of this recommendations.
	 *
	 * @return the designer2 of this recommendations
	 */
	@AutoEscape
	public String getDesigner2();

	/**
	 * Sets the designer2 of this recommendations.
	 *
	 * @param designer2 the designer2 of this recommendations
	 */
	public void setDesigner2(String designer2);

	/**
	 * Returns the _type of this recommendations.
	 *
	 * @return the _type of this recommendations
	 */
	public long get_type();

	/**
	 * Sets the _type of this recommendations.
	 *
	 * @param _type the _type of this recommendations
	 */
	public void set_type(long _type);

	/**
	 * Returns the percentage of this recommendations.
	 *
	 * @return the percentage of this recommendations
	 */
	public double getPercentage();

	/**
	 * Sets the percentage of this recommendations.
	 *
	 * @param percentage the percentage of this recommendations
	 */
	public void setPercentage(double percentage);

	/**
	 * Returns the company ID of this recommendations.
	 *
	 * @return the company ID of this recommendations
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this recommendations.
	 *
	 * @param companyId the company ID of this recommendations
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the color_name of this recommendations.
	 *
	 * @return the color_name of this recommendations
	 */
	@AutoEscape
	public String getColor_name();

	/**
	 * Sets the color_name of this recommendations.
	 *
	 * @param color_name the color_name of this recommendations
	 */
	public void setColor_name(String color_name);

	/**
	 * Returns the color_image of this recommendations.
	 *
	 * @return the color_image of this recommendations
	 */
	@AutoEscape
	public String getColor_image();

	/**
	 * Sets the color_image of this recommendations.
	 *
	 * @param color_image the color_image of this recommendations
	 */
	public void setColor_image(String color_image);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Recommendations recommendations);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Recommendations> toCacheModel();

	@Override
	public Recommendations toEscapedModel();

	@Override
	public Recommendations toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}