/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Impressions service. Represents a row in the &quot;Impressions&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.cloud.tags.model.impl.ImpressionsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.cloud.tags.model.impl.ImpressionsImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see Impressions
 * @see com.cloud.tags.model.impl.ImpressionsImpl
 * @see com.cloud.tags.model.impl.ImpressionsModelImpl
 * @generated
 */
public interface ImpressionsModel extends BaseModel<Impressions> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a impressions model instance should use the {@link Impressions} interface instead.
	 */

	/**
	 * Returns the primary key of this impressions.
	 *
	 * @return the primary key of this impressions
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this impressions.
	 *
	 * @param primaryKey the primary key of this impressions
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the rec ID of this impressions.
	 *
	 * @return the rec ID of this impressions
	 */
	public long getRecId();

	/**
	 * Sets the rec ID of this impressions.
	 *
	 * @param recId the rec ID of this impressions
	 */
	public void setRecId(long recId);

	/**
	 * Returns the impression type of this impressions.
	 *
	 * @return the impression type of this impressions
	 */
	@AutoEscape
	public String getImpressionType();

	/**
	 * Sets the impression type of this impressions.
	 *
	 * @param impressionType the impression type of this impressions
	 */
	public void setImpressionType(String impressionType);

	/**
	 * Returns the impression ID of this impressions.
	 *
	 * @return the impression ID of this impressions
	 */
	@AutoEscape
	public String getImpressionId();

	/**
	 * Sets the impression ID of this impressions.
	 *
	 * @param impressionId the impression ID of this impressions
	 */
	public void setImpressionId(String impressionId);

	/**
	 * Returns the impression action of this impressions.
	 *
	 * @return the impression action of this impressions
	 */
	@AutoEscape
	public String getImpressionAction();

	/**
	 * Sets the impression action of this impressions.
	 *
	 * @param impressionAction the impression action of this impressions
	 */
	public void setImpressionAction(String impressionAction);

	/**
	 * Returns the ip address of this impressions.
	 *
	 * @return the ip address of this impressions
	 */
	@AutoEscape
	public String getIpAddress();

	/**
	 * Sets the ip address of this impressions.
	 *
	 * @param ipAddress the ip address of this impressions
	 */
	public void setIpAddress(String ipAddress);

	/**
	 * Returns the device type of this impressions.
	 *
	 * @return the device type of this impressions
	 */
	@AutoEscape
	public String getDeviceType();

	/**
	 * Sets the device type of this impressions.
	 *
	 * @param deviceType the device type of this impressions
	 */
	public void setDeviceType(String deviceType);

	/**
	 * Returns the device name of this impressions.
	 *
	 * @return the device name of this impressions
	 */
	@AutoEscape
	public String getDeviceName();

	/**
	 * Sets the device name of this impressions.
	 *
	 * @param deviceName the device name of this impressions
	 */
	public void setDeviceName(String deviceName);

	/**
	 * Returns the device width of this impressions.
	 *
	 * @return the device width of this impressions
	 */
	@AutoEscape
	public String getDeviceWidth();

	/**
	 * Sets the device width of this impressions.
	 *
	 * @param deviceWidth the device width of this impressions
	 */
	public void setDeviceWidth(String deviceWidth);

	/**
	 * Returns the idevice browser of this impressions.
	 *
	 * @return the idevice browser of this impressions
	 */
	@AutoEscape
	public String getIdeviceBrowser();

	/**
	 * Sets the idevice browser of this impressions.
	 *
	 * @param ideviceBrowser the idevice browser of this impressions
	 */
	public void setIdeviceBrowser(String ideviceBrowser);

	/**
	 * Returns the session_ ID of this impressions.
	 *
	 * @return the session_ ID of this impressions
	 */
	@AutoEscape
	public String getSession_Id();

	/**
	 * Sets the session_ ID of this impressions.
	 *
	 * @param session_Id the session_ ID of this impressions
	 */
	public void setSession_Id(String session_Id);

	/**
	 * Returns the company ID of this impressions.
	 *
	 * @return the company ID of this impressions
	 */
	@AutoEscape
	public String getCompanyId();

	/**
	 * Sets the company ID of this impressions.
	 *
	 * @param companyId the company ID of this impressions
	 */
	public void setCompanyId(String companyId);

	/**
	 * Returns the create date of this impressions.
	 *
	 * @return the create date of this impressions
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this impressions.
	 *
	 * @param createDate the create date of this impressions
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the store device ID of this impressions.
	 *
	 * @return the store device ID of this impressions
	 */
	public long getStoreDeviceId();

	/**
	 * Sets the store device ID of this impressions.
	 *
	 * @param storeDeviceId the store device ID of this impressions
	 */
	public void setStoreDeviceId(long storeDeviceId);

	/**
	 * Returns the staff ID of this impressions.
	 *
	 * @return the staff ID of this impressions
	 */
	@AutoEscape
	public String getStaffId();

	/**
	 * Sets the staff ID of this impressions.
	 *
	 * @param staffId the staff ID of this impressions
	 */
	public void setStaffId(String staffId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Impressions impressions);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Impressions> toCacheModel();

	@Override
	public Impressions toEscapedModel();

	@Override
	public Impressions toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}