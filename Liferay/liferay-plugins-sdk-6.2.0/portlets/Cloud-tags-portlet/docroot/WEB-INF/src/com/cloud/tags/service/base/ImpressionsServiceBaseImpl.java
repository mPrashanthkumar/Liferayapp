/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cloud.tags.service.base;

import com.cloud.tags.model.Impressions;
import com.cloud.tags.service.ImpressionsService;
import com.cloud.tags.service.persistence.CartsDesignersPersistence;
import com.cloud.tags.service.persistence.CartsPersistence;
import com.cloud.tags.service.persistence.CustomerImagesPersistence;
import com.cloud.tags.service.persistence.DesignersBarcodePersistence;
import com.cloud.tags.service.persistence.DesignersImagesPersistence;
import com.cloud.tags.service.persistence.DesignersPersistence;
import com.cloud.tags.service.persistence.ImpressionsPersistence;
import com.cloud.tags.service.persistence.RecommendationsPersistence;
import com.cloud.tags.service.persistence.StoreDeviceMapPersistence;
import com.cloud.tags.service.persistence.StoreInformationMapPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the impressions remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.cloud.tags.service.impl.ImpressionsServiceImpl}.
 * </p>
 *
 * @author Mohammed Zaheer
 * @see com.cloud.tags.service.impl.ImpressionsServiceImpl
 * @see com.cloud.tags.service.ImpressionsServiceUtil
 * @generated
 */
public abstract class ImpressionsServiceBaseImpl extends BaseServiceImpl
	implements ImpressionsService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.cloud.tags.service.ImpressionsServiceUtil} to access the impressions remote service.
	 */

	/**
	 * Returns the carts local service.
	 *
	 * @return the carts local service
	 */
	public com.cloud.tags.service.CartsLocalService getCartsLocalService() {
		return cartsLocalService;
	}

	/**
	 * Sets the carts local service.
	 *
	 * @param cartsLocalService the carts local service
	 */
	public void setCartsLocalService(
		com.cloud.tags.service.CartsLocalService cartsLocalService) {
		this.cartsLocalService = cartsLocalService;
	}

	/**
	 * Returns the carts persistence.
	 *
	 * @return the carts persistence
	 */
	public CartsPersistence getCartsPersistence() {
		return cartsPersistence;
	}

	/**
	 * Sets the carts persistence.
	 *
	 * @param cartsPersistence the carts persistence
	 */
	public void setCartsPersistence(CartsPersistence cartsPersistence) {
		this.cartsPersistence = cartsPersistence;
	}

	/**
	 * Returns the carts designers local service.
	 *
	 * @return the carts designers local service
	 */
	public com.cloud.tags.service.CartsDesignersLocalService getCartsDesignersLocalService() {
		return cartsDesignersLocalService;
	}

	/**
	 * Sets the carts designers local service.
	 *
	 * @param cartsDesignersLocalService the carts designers local service
	 */
	public void setCartsDesignersLocalService(
		com.cloud.tags.service.CartsDesignersLocalService cartsDesignersLocalService) {
		this.cartsDesignersLocalService = cartsDesignersLocalService;
	}

	/**
	 * Returns the carts designers persistence.
	 *
	 * @return the carts designers persistence
	 */
	public CartsDesignersPersistence getCartsDesignersPersistence() {
		return cartsDesignersPersistence;
	}

	/**
	 * Sets the carts designers persistence.
	 *
	 * @param cartsDesignersPersistence the carts designers persistence
	 */
	public void setCartsDesignersPersistence(
		CartsDesignersPersistence cartsDesignersPersistence) {
		this.cartsDesignersPersistence = cartsDesignersPersistence;
	}

	/**
	 * Returns the customer images local service.
	 *
	 * @return the customer images local service
	 */
	public com.cloud.tags.service.CustomerImagesLocalService getCustomerImagesLocalService() {
		return customerImagesLocalService;
	}

	/**
	 * Sets the customer images local service.
	 *
	 * @param customerImagesLocalService the customer images local service
	 */
	public void setCustomerImagesLocalService(
		com.cloud.tags.service.CustomerImagesLocalService customerImagesLocalService) {
		this.customerImagesLocalService = customerImagesLocalService;
	}

	/**
	 * Returns the customer images remote service.
	 *
	 * @return the customer images remote service
	 */
	public com.cloud.tags.service.CustomerImagesService getCustomerImagesService() {
		return customerImagesService;
	}

	/**
	 * Sets the customer images remote service.
	 *
	 * @param customerImagesService the customer images remote service
	 */
	public void setCustomerImagesService(
		com.cloud.tags.service.CustomerImagesService customerImagesService) {
		this.customerImagesService = customerImagesService;
	}

	/**
	 * Returns the customer images persistence.
	 *
	 * @return the customer images persistence
	 */
	public CustomerImagesPersistence getCustomerImagesPersistence() {
		return customerImagesPersistence;
	}

	/**
	 * Sets the customer images persistence.
	 *
	 * @param customerImagesPersistence the customer images persistence
	 */
	public void setCustomerImagesPersistence(
		CustomerImagesPersistence customerImagesPersistence) {
		this.customerImagesPersistence = customerImagesPersistence;
	}

	/**
	 * Returns the designers local service.
	 *
	 * @return the designers local service
	 */
	public com.cloud.tags.service.DesignersLocalService getDesignersLocalService() {
		return designersLocalService;
	}

	/**
	 * Sets the designers local service.
	 *
	 * @param designersLocalService the designers local service
	 */
	public void setDesignersLocalService(
		com.cloud.tags.service.DesignersLocalService designersLocalService) {
		this.designersLocalService = designersLocalService;
	}

	/**
	 * Returns the designers remote service.
	 *
	 * @return the designers remote service
	 */
	public com.cloud.tags.service.DesignersService getDesignersService() {
		return designersService;
	}

	/**
	 * Sets the designers remote service.
	 *
	 * @param designersService the designers remote service
	 */
	public void setDesignersService(
		com.cloud.tags.service.DesignersService designersService) {
		this.designersService = designersService;
	}

	/**
	 * Returns the designers persistence.
	 *
	 * @return the designers persistence
	 */
	public DesignersPersistence getDesignersPersistence() {
		return designersPersistence;
	}

	/**
	 * Sets the designers persistence.
	 *
	 * @param designersPersistence the designers persistence
	 */
	public void setDesignersPersistence(
		DesignersPersistence designersPersistence) {
		this.designersPersistence = designersPersistence;
	}

	/**
	 * Returns the designers barcode local service.
	 *
	 * @return the designers barcode local service
	 */
	public com.cloud.tags.service.DesignersBarcodeLocalService getDesignersBarcodeLocalService() {
		return designersBarcodeLocalService;
	}

	/**
	 * Sets the designers barcode local service.
	 *
	 * @param designersBarcodeLocalService the designers barcode local service
	 */
	public void setDesignersBarcodeLocalService(
		com.cloud.tags.service.DesignersBarcodeLocalService designersBarcodeLocalService) {
		this.designersBarcodeLocalService = designersBarcodeLocalService;
	}

	/**
	 * Returns the designers barcode remote service.
	 *
	 * @return the designers barcode remote service
	 */
	public com.cloud.tags.service.DesignersBarcodeService getDesignersBarcodeService() {
		return designersBarcodeService;
	}

	/**
	 * Sets the designers barcode remote service.
	 *
	 * @param designersBarcodeService the designers barcode remote service
	 */
	public void setDesignersBarcodeService(
		com.cloud.tags.service.DesignersBarcodeService designersBarcodeService) {
		this.designersBarcodeService = designersBarcodeService;
	}

	/**
	 * Returns the designers barcode persistence.
	 *
	 * @return the designers barcode persistence
	 */
	public DesignersBarcodePersistence getDesignersBarcodePersistence() {
		return designersBarcodePersistence;
	}

	/**
	 * Sets the designers barcode persistence.
	 *
	 * @param designersBarcodePersistence the designers barcode persistence
	 */
	public void setDesignersBarcodePersistence(
		DesignersBarcodePersistence designersBarcodePersistence) {
		this.designersBarcodePersistence = designersBarcodePersistence;
	}

	/**
	 * Returns the designers images local service.
	 *
	 * @return the designers images local service
	 */
	public com.cloud.tags.service.DesignersImagesLocalService getDesignersImagesLocalService() {
		return designersImagesLocalService;
	}

	/**
	 * Sets the designers images local service.
	 *
	 * @param designersImagesLocalService the designers images local service
	 */
	public void setDesignersImagesLocalService(
		com.cloud.tags.service.DesignersImagesLocalService designersImagesLocalService) {
		this.designersImagesLocalService = designersImagesLocalService;
	}

	/**
	 * Returns the designers images remote service.
	 *
	 * @return the designers images remote service
	 */
	public com.cloud.tags.service.DesignersImagesService getDesignersImagesService() {
		return designersImagesService;
	}

	/**
	 * Sets the designers images remote service.
	 *
	 * @param designersImagesService the designers images remote service
	 */
	public void setDesignersImagesService(
		com.cloud.tags.service.DesignersImagesService designersImagesService) {
		this.designersImagesService = designersImagesService;
	}

	/**
	 * Returns the designers images persistence.
	 *
	 * @return the designers images persistence
	 */
	public DesignersImagesPersistence getDesignersImagesPersistence() {
		return designersImagesPersistence;
	}

	/**
	 * Sets the designers images persistence.
	 *
	 * @param designersImagesPersistence the designers images persistence
	 */
	public void setDesignersImagesPersistence(
		DesignersImagesPersistence designersImagesPersistence) {
		this.designersImagesPersistence = designersImagesPersistence;
	}

	/**
	 * Returns the impressions local service.
	 *
	 * @return the impressions local service
	 */
	public com.cloud.tags.service.ImpressionsLocalService getImpressionsLocalService() {
		return impressionsLocalService;
	}

	/**
	 * Sets the impressions local service.
	 *
	 * @param impressionsLocalService the impressions local service
	 */
	public void setImpressionsLocalService(
		com.cloud.tags.service.ImpressionsLocalService impressionsLocalService) {
		this.impressionsLocalService = impressionsLocalService;
	}

	/**
	 * Returns the impressions remote service.
	 *
	 * @return the impressions remote service
	 */
	public com.cloud.tags.service.ImpressionsService getImpressionsService() {
		return impressionsService;
	}

	/**
	 * Sets the impressions remote service.
	 *
	 * @param impressionsService the impressions remote service
	 */
	public void setImpressionsService(
		com.cloud.tags.service.ImpressionsService impressionsService) {
		this.impressionsService = impressionsService;
	}

	/**
	 * Returns the impressions persistence.
	 *
	 * @return the impressions persistence
	 */
	public ImpressionsPersistence getImpressionsPersistence() {
		return impressionsPersistence;
	}

	/**
	 * Sets the impressions persistence.
	 *
	 * @param impressionsPersistence the impressions persistence
	 */
	public void setImpressionsPersistence(
		ImpressionsPersistence impressionsPersistence) {
		this.impressionsPersistence = impressionsPersistence;
	}

	/**
	 * Returns the recommendations local service.
	 *
	 * @return the recommendations local service
	 */
	public com.cloud.tags.service.RecommendationsLocalService getRecommendationsLocalService() {
		return recommendationsLocalService;
	}

	/**
	 * Sets the recommendations local service.
	 *
	 * @param recommendationsLocalService the recommendations local service
	 */
	public void setRecommendationsLocalService(
		com.cloud.tags.service.RecommendationsLocalService recommendationsLocalService) {
		this.recommendationsLocalService = recommendationsLocalService;
	}

	/**
	 * Returns the recommendations remote service.
	 *
	 * @return the recommendations remote service
	 */
	public com.cloud.tags.service.RecommendationsService getRecommendationsService() {
		return recommendationsService;
	}

	/**
	 * Sets the recommendations remote service.
	 *
	 * @param recommendationsService the recommendations remote service
	 */
	public void setRecommendationsService(
		com.cloud.tags.service.RecommendationsService recommendationsService) {
		this.recommendationsService = recommendationsService;
	}

	/**
	 * Returns the recommendations persistence.
	 *
	 * @return the recommendations persistence
	 */
	public RecommendationsPersistence getRecommendationsPersistence() {
		return recommendationsPersistence;
	}

	/**
	 * Sets the recommendations persistence.
	 *
	 * @param recommendationsPersistence the recommendations persistence
	 */
	public void setRecommendationsPersistence(
		RecommendationsPersistence recommendationsPersistence) {
		this.recommendationsPersistence = recommendationsPersistence;
	}

	/**
	 * Returns the store device map local service.
	 *
	 * @return the store device map local service
	 */
	public com.cloud.tags.service.StoreDeviceMapLocalService getStoreDeviceMapLocalService() {
		return storeDeviceMapLocalService;
	}

	/**
	 * Sets the store device map local service.
	 *
	 * @param storeDeviceMapLocalService the store device map local service
	 */
	public void setStoreDeviceMapLocalService(
		com.cloud.tags.service.StoreDeviceMapLocalService storeDeviceMapLocalService) {
		this.storeDeviceMapLocalService = storeDeviceMapLocalService;
	}

	/**
	 * Returns the store device map remote service.
	 *
	 * @return the store device map remote service
	 */
	public com.cloud.tags.service.StoreDeviceMapService getStoreDeviceMapService() {
		return storeDeviceMapService;
	}

	/**
	 * Sets the store device map remote service.
	 *
	 * @param storeDeviceMapService the store device map remote service
	 */
	public void setStoreDeviceMapService(
		com.cloud.tags.service.StoreDeviceMapService storeDeviceMapService) {
		this.storeDeviceMapService = storeDeviceMapService;
	}

	/**
	 * Returns the store device map persistence.
	 *
	 * @return the store device map persistence
	 */
	public StoreDeviceMapPersistence getStoreDeviceMapPersistence() {
		return storeDeviceMapPersistence;
	}

	/**
	 * Sets the store device map persistence.
	 *
	 * @param storeDeviceMapPersistence the store device map persistence
	 */
	public void setStoreDeviceMapPersistence(
		StoreDeviceMapPersistence storeDeviceMapPersistence) {
		this.storeDeviceMapPersistence = storeDeviceMapPersistence;
	}

	/**
	 * Returns the store information map local service.
	 *
	 * @return the store information map local service
	 */
	public com.cloud.tags.service.StoreInformationMapLocalService getStoreInformationMapLocalService() {
		return storeInformationMapLocalService;
	}

	/**
	 * Sets the store information map local service.
	 *
	 * @param storeInformationMapLocalService the store information map local service
	 */
	public void setStoreInformationMapLocalService(
		com.cloud.tags.service.StoreInformationMapLocalService storeInformationMapLocalService) {
		this.storeInformationMapLocalService = storeInformationMapLocalService;
	}

	/**
	 * Returns the store information map remote service.
	 *
	 * @return the store information map remote service
	 */
	public com.cloud.tags.service.StoreInformationMapService getStoreInformationMapService() {
		return storeInformationMapService;
	}

	/**
	 * Sets the store information map remote service.
	 *
	 * @param storeInformationMapService the store information map remote service
	 */
	public void setStoreInformationMapService(
		com.cloud.tags.service.StoreInformationMapService storeInformationMapService) {
		this.storeInformationMapService = storeInformationMapService;
	}

	/**
	 * Returns the store information map persistence.
	 *
	 * @return the store information map persistence
	 */
	public StoreInformationMapPersistence getStoreInformationMapPersistence() {
		return storeInformationMapPersistence;
	}

	/**
	 * Sets the store information map persistence.
	 *
	 * @param storeInformationMapPersistence the store information map persistence
	 */
	public void setStoreInformationMapPersistence(
		StoreInformationMapPersistence storeInformationMapPersistence) {
		this.storeInformationMapPersistence = storeInformationMapPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Impressions.class;
	}

	protected String getModelClassName() {
		return Impressions.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = impressionsPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.cloud.tags.service.CartsLocalService.class)
	protected com.cloud.tags.service.CartsLocalService cartsLocalService;
	@BeanReference(type = CartsPersistence.class)
	protected CartsPersistence cartsPersistence;
	@BeanReference(type = com.cloud.tags.service.CartsDesignersLocalService.class)
	protected com.cloud.tags.service.CartsDesignersLocalService cartsDesignersLocalService;
	@BeanReference(type = CartsDesignersPersistence.class)
	protected CartsDesignersPersistence cartsDesignersPersistence;
	@BeanReference(type = com.cloud.tags.service.CustomerImagesLocalService.class)
	protected com.cloud.tags.service.CustomerImagesLocalService customerImagesLocalService;
	@BeanReference(type = com.cloud.tags.service.CustomerImagesService.class)
	protected com.cloud.tags.service.CustomerImagesService customerImagesService;
	@BeanReference(type = CustomerImagesPersistence.class)
	protected CustomerImagesPersistence customerImagesPersistence;
	@BeanReference(type = com.cloud.tags.service.DesignersLocalService.class)
	protected com.cloud.tags.service.DesignersLocalService designersLocalService;
	@BeanReference(type = com.cloud.tags.service.DesignersService.class)
	protected com.cloud.tags.service.DesignersService designersService;
	@BeanReference(type = DesignersPersistence.class)
	protected DesignersPersistence designersPersistence;
	@BeanReference(type = com.cloud.tags.service.DesignersBarcodeLocalService.class)
	protected com.cloud.tags.service.DesignersBarcodeLocalService designersBarcodeLocalService;
	@BeanReference(type = com.cloud.tags.service.DesignersBarcodeService.class)
	protected com.cloud.tags.service.DesignersBarcodeService designersBarcodeService;
	@BeanReference(type = DesignersBarcodePersistence.class)
	protected DesignersBarcodePersistence designersBarcodePersistence;
	@BeanReference(type = com.cloud.tags.service.DesignersImagesLocalService.class)
	protected com.cloud.tags.service.DesignersImagesLocalService designersImagesLocalService;
	@BeanReference(type = com.cloud.tags.service.DesignersImagesService.class)
	protected com.cloud.tags.service.DesignersImagesService designersImagesService;
	@BeanReference(type = DesignersImagesPersistence.class)
	protected DesignersImagesPersistence designersImagesPersistence;
	@BeanReference(type = com.cloud.tags.service.ImpressionsLocalService.class)
	protected com.cloud.tags.service.ImpressionsLocalService impressionsLocalService;
	@BeanReference(type = com.cloud.tags.service.ImpressionsService.class)
	protected com.cloud.tags.service.ImpressionsService impressionsService;
	@BeanReference(type = ImpressionsPersistence.class)
	protected ImpressionsPersistence impressionsPersistence;
	@BeanReference(type = com.cloud.tags.service.RecommendationsLocalService.class)
	protected com.cloud.tags.service.RecommendationsLocalService recommendationsLocalService;
	@BeanReference(type = com.cloud.tags.service.RecommendationsService.class)
	protected com.cloud.tags.service.RecommendationsService recommendationsService;
	@BeanReference(type = RecommendationsPersistence.class)
	protected RecommendationsPersistence recommendationsPersistence;
	@BeanReference(type = com.cloud.tags.service.StoreDeviceMapLocalService.class)
	protected com.cloud.tags.service.StoreDeviceMapLocalService storeDeviceMapLocalService;
	@BeanReference(type = com.cloud.tags.service.StoreDeviceMapService.class)
	protected com.cloud.tags.service.StoreDeviceMapService storeDeviceMapService;
	@BeanReference(type = StoreDeviceMapPersistence.class)
	protected StoreDeviceMapPersistence storeDeviceMapPersistence;
	@BeanReference(type = com.cloud.tags.service.StoreInformationMapLocalService.class)
	protected com.cloud.tags.service.StoreInformationMapLocalService storeInformationMapLocalService;
	@BeanReference(type = com.cloud.tags.service.StoreInformationMapService.class)
	protected com.cloud.tags.service.StoreInformationMapService storeInformationMapService;
	@BeanReference(type = StoreInformationMapPersistence.class)
	protected StoreInformationMapPersistence storeInformationMapPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ImpressionsServiceClpInvoker _clpInvoker = new ImpressionsServiceClpInvoker();
}